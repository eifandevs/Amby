version: 2
jobs:
  build-and-test:
    working_directory: ~/project
    macos:
      xcode: "11.1.0"
    steps:
      - checkout:
          path: ~/project
      # Bundler Cache
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}
      # Carthage Setup
      - restore_cache:
          key: carthage-cache-v1-{{ checksum "Cartfile.resolved" }}
      - run:
          name: bootstrap
          command: ./bootstrap.sh
      - save_cache:
          key: carthage-cache-v1-{{ checksum "Cartfile.resolved" }}
          paths:
            - Carthage
      # Build
      - run:
          name: Build
          command: bundle exec fastlane ios dev
          
  # swiftlint:
  #   docker:
  #     - image: dantoml/swiftlint:latest
  #   steps:
  #     - checkout
  #     - run: swiftlint lint --reporter junit | tee result.xml
  #     - store_artifacts:
  #         path: result.xml
  #     - store_test_results:
  #         path: result.xml
  danger:
    docker:
      - image: dantoml/danger:latest
        environment:
         - TZ: "/usr/share/zoneinfo/Asia/Tokyo"
         - LANG: ja_JP.UTF-8
         - LC_ALL: C.UTF-8
         - LANGUAGE: ja_JP.UTF-8

    steps:
      - checkout
      # Bundler Setup
      - run:
          name: Which bundler?
          command: bundle -v
      # Bundler Install & Cache
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run: bundler exec danger

workflows:
  version: 2
  build-test-lint:
    jobs:

      # - swiftlint
      - danger
      - build-and-test:
          requires:
            - danger
          filters:
            branches:
              only:
                - develop
